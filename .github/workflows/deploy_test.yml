name: Deploy Microservices to EC2

on:
  push:
    branches:
      - test

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push auth-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./Backend/login-service/auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and push authorization-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest ./Backend/login-service/authorization-service
          docker push ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest

      
  deploy:
    name: Deploy Docker Containers to EC2
    runs-on: ubuntu-latest
    needs: build_and_push_images
    
    steps:
    
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST_LOGIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update -y
            sudo apt install docker.io -y
            sudo systemctl start docker
            sudo systemctl enable docker

            docker stop auth-service authorization-service  || true
            docker rm auth-service authorization-service  || true
            
            docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest
            

            docker run -d -p 8001:8001 --name auth-service ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker run -d -p 8002:8002 --name authorization-service ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest
        
