name: Deploy Infraestructura con Terraform (QA)

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  terraform-deploy:
    name: Terraform Apply en QA
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infra/envs/QA

    steps:
      - name: ðŸ“¥ Clonar repositorio
        uses: actions/checkout@v3

      - name: ðŸ”§ Configurar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0  

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Auth Login
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service $GITHUB_WORKSPACE/Backend/login-service/auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service

      - name: Build and push Authorization Login
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/authorization-service $GITHUB_WORKSPACE/Backend/login-service/authorization-service
          docker push ${{ secrets.DOCKER_USERNAME }}/authorization-service

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan