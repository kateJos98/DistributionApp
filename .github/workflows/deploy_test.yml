name: Deploy Microservices to EC2

on:
  push:
    branches:
      - test  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: ./Backend/login-service/auth-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and push authorization-service
        uses: docker/build-push-action@v5
        with:
          context: ./Backend/login-service/authorization-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest

  deploy_to_ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build_and_push_images

    steps:
      - name: Copy .env files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_LOGIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            Backend/login-service/auth-service/.env
            Backend/login-service/authorization-service/.env
          target: ~/envs

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST_LOGIN_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Instalar Docker si no está
            if ! command -v docker &> /dev/null; then
              sudo apt update -y
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Detener y eliminar contenedores anteriores
            docker stop auth-service authorization-service || true
            docker rm auth-service authorization-service || true

            # Descargar nuevas imágenes
            docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest
            
            # Ejecutar contenedores usando sus archivos .env
            docker run -d --env-file ~/envs/Backend/login-service/auth-service/.env -p 8001:8001 --name auth-service ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker run -d --env-file ~/envs/Backend/login-service/authorization-service/.env -p 8002:8002 --name authorization-service ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest