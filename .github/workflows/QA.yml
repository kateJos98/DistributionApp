name: Deploy Microservices to EC2

on:
  push:
    branches:
      - test

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push create-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/create-service:latest ./Backend/customer_service/Create_Service
          docker push ${{ secrets.DOCKER_USERNAME }}/create-service:latest

      - name: Build and push delete-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/delete-service:latest ./Backend/customer_service/Delete_Service
          docker push ${{ secrets.DOCKER_USERNAME }}/delete-service:latest

      
  deploy:
    name: Deploy Docker Containers to EC2
    runs-on: ubuntu-latest
    needs: build_and_push_images
    
    steps:
    
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST_CUSTOMER_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
              sudo apt update -y
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker

              sudo docker stop create-customer delete-customer || true
              sudo docker rm create-customer delete-customer || true

              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/create-customer:latest
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete-customer:latest

              sudo docker run -d -p 8003:80 --name create-customer ${{ secrets.DOCKER_USERNAME }}/create-customer:latest
              sudo docker run -d -p 8004:8004 --name delete-customer ${{ secrets.DOCKER_USERNAME }}/delete-customer:latest
       
        #katyjoseth719
        #docker stop auth-service authorization-service  || true
        #docker rm auth-service authorization-service  || true
            
        #docker pull ${ secrets.DOCKER_USERNAME }}/auth-service:latest
        #docker pull ${ secrets.DOCKER_USERNAME }}/authorization-service:latest
            

        #docker run -d -p 8001:8001 --name auth-service ${ secrets.DOCKER_USERNAME }}/auth-service:latest
        #docker run -d -p 8002:8002 --name authorization-service ${ secrets.DOCKER_USERNAME }}/authorization-service:latest
